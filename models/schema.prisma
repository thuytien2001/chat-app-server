generator client {
  provider = "prisma-client-js"
}

datasource db {
    url      = "postgresql://thuytien:123456@localhost:5433/chat_app?schemas=public"
    provider = "postgresql"
}

model User {
    id        Int                @id @default(autoincrement())
    createdAt DateTime           @default(now())
    updatedAt DateTime           @default(now())
    userName  String             @unique @db.Text
    name      String             @db.Text
    password  String             @db.Text
    imageUri  String             @db.Text
    // relationship
    messages  Message[]
    rooms     UsersOnRoomChats[]
    syncData  SyncDataOffline?
}

model Message {
    id          Int               @id @default(autoincrement())
    createdAt   DateTime          @default(now())
    content     String            @db.Text
    createdBy   User              @relation(fields: [createdById], references: [id])
    createdById Int
    room        RoomChat          @relation(fields: [roomId], references: [id])
    roomId      Int
    // relationship
    lastSeenBy  UsersOnRoomChats?
}

model RoomChat {
    id        Int                @id @default(autoincrement())
    createdAt DateTime           @default(now())
    updatedAt DateTime           @default(now())
    name      String             @db.Text
    avatarUri String?            @db.Text
    // relationship
    users     UsersOnRoomChats[]
    messages  Message[]
}

model UsersOnRoomChats {
    user              User     @relation(fields: [userId], references: [id])
    userId            Int
    room              RoomChat @relation(fields: [roomId], references: [id])
    roomId            Int
    createdAt         DateTime @default(now())
    lastMessageSeen   Message? @relation(fields: [lastMessageSeenId], references: [id])
    lastMessageSeenId Int?     @unique

    @@id([userId, roomId])
}

model SyncDataOffline {
    id           Int       @id @default(autoincrement())
    user         User      @relation(fields: [userId], references: [id])
    userId       Int       @unique
    lastTimeSync DateTime?
}
